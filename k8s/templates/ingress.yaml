{{- if .Values.ingress.enabled }}
{{- $svcName := (.Values.service.name | default (include "landing-page.fullname" .)) -}}
{{- $ports := (.Values.service.ports | default (list (dict "name" "http" "port" 80 "targetPort" 80))) -}}
{{- $first := index $ports 0 -}}
{{- $svcPort := index $first "port" -}}
{{- $hosts := required "ingress.hosts must be set (list)" .Values.ingress.hosts -}}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "landing-page.fullname" . }}
  labels:
    {{- include "landing-page.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.ingress.className }}
  ingressClassName: {{ . }}
  {{- end }}
  rules:
    {{- range $h := $hosts }}
    - host: {{ $h | quote }}
      http:
        paths:
          - path: {{ $.Values.ingress.path | default "/" }}
            pathType: {{ $.Values.ingress.pathType | default "Prefix" }}
            backend:
              service:
                name: {{ $svcName }}
                port:
                  number: {{ $svcPort }}
    {{- if $.Values.ingress.addWww }}
    - host: {{ printf "www.%s" $h | quote }}
      http:
        paths:
          - path: {{ $.Values.ingress.path | default "/" }}
            pathType: {{ $.Values.ingress.pathType | default "Prefix" }}
            backend:
              service:
                name: {{ $svcName }}
                port:
                  number: {{ $svcPort }}
    {{- end }}
    {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    - secretName: {{ .Values.ingress.tls.secretName }}
      hosts:
        {{- range $h := $hosts }}
        - {{ $h | quote }}
        {{- if $.Values.ingress.addWww }}
        - {{ printf "www.%s" $h | quote }}
        {{- end }}
        {{- end }}
  {{- end }}
{{- end }}

